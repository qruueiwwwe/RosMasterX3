# 使用 ROS2 Foxy 作为基础镜像
FROM ros:foxy-ros-base

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ARG ROS_DISTRO=foxy

# 安装必要的系统依赖
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3-pip \
    python3-opencv \
    python3-numpy \
    python3-yaml \
    mosquitto \
    mosquitto-clients \
    && rm -rf /var/lib/apt/lists/* && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    ros-foxy-cv-bridge \
    ros-foxy-image-transport-plugins \
    ros-foxy-image-transport \
    ros-foxy-camera-info-manager \
    ros-foxy-joy \
    && rm -rf /var/lib/apt/lists/* && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    ros-foxy-desktop \
    && rm -rf /var/lib/apt/lists/*

# 安装 Python 依赖
RUN pip3 install paho-mqtt flask requests

# 创建工作目录
WORKDIR /ros_ws

# 复制 ROS2 工作空间
COPY catkin_ws/src/driver_node_ros2 /ros_ws/src/driver_node_ros2/

# 复制配置文件
COPY dockerfile/params.yaml /ros_ws/config/
COPY dockerfile/http_server.py /ros_ws/scripts/
COPY dockerfile/entrypoint.sh /ros_ws/scripts/

# 构建 ROS2 工作空间
RUN /bin/bash -c "source /opt/ros/$ROS_DISTRO/setup.bash && \
    colcon build --symlink-install"

# 设置环境变量
ENV PYTHONPATH=/ros_ws/install/lib/python3.8/site-packages:${PYTHONPATH:-}
ENV PATH=/ros_ws/install/bin:/opt/ros/$ROS_DISTRO/bin:${PATH}
ENV LD_LIBRARY_PATH=/opt/ros/$ROS_DISTRO/lib:/ros_ws/install/lib:${LD_LIBRARY_PATH:-}

# 设置入口点脚本权限
RUN chmod +x /ros_ws/scripts/entrypoint.sh

# 设置入口点
ENTRYPOINT ["/ros_ws/scripts/entrypoint.sh"]